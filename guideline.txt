Function Usage Guidelines
In this project, we use anonymous functions and function declarations based on context:

1. Anonymous Functions

Use for inline logic or short-lived callbacks (e.g., event handlers, map, filter).
Best suited for localized, single-use logic.

2. Function Declarations

Use for reusable or complex logic.
Helps improve readability, debugging (better stack traces), and performance (avoids recreating functions during render cycles).
Consistency is key—apply this guideline intentionally. Existing anonymous functions don’t need to be refactored unless necessary, but aim to follow this approach in new or updated code.

How would i know if refactoring improve the code?

You can determine whether this refactor is better by considering these questions:

1. Is the code easier to read and understand?
2. Would it be easier to maintain or extend the logic in the future?
3. Are any parts of the logic potentially reusable elsewhere?
4. Would testing individual functions be easier?
5. Is there any noticeable performance difference (though this is likely not an issue here)?